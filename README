Me: Barry Carter (carter.barry@gmail.com)

Instead of keeping all of my miniscule apps in a different github, I'll 
put them all here for now.

If any of them grows big enough, I'll create a new github for it.

NOTE: geonames.db is used by scripts here, but is NOT in this
repo. Instead, find it at: http://geonames.db.94y.info/ (click "Raw
SQLite3 db" to download the whole thing in SQLite3 format: it's about
1.1G)

Summary:

 bclib.pl: A library of useful functions

 bc-stack2wp.pl: converts my stackoverflow questions to WordPress posts

 playground.pl: constantly changing testbed of functions

 bc-approx-sun-ra-dec.m: Mathematica script that calculates solar
 position for next 10 years

 bc-sun-always-shines.pl: Uses google maps to display where it's day,
 night, twilight, etc

 gbefore.txt, gend.txt: used by bc-sun-always-shines.pl

 bc-voronoi-binary.pl: Uses binary search to find true 3-D Voronoi
 diagram of earth, but is painfully slow

 bc-closest-gmap.pl: tries to use qhull to find true 3-D Voronoi
 diagram of earth, but doesn't work yet

 bc-get-cycle-files.pl: obtain cycle files (weather) from NOAA sites

 bc-dns-server.pl: a simple Perl DNS server, template for more
 interesting DNS server

 bc-cheap-bay.pl: finds cheap available items on eBay (one penny, no
 shipping, no bids, expiring within 4 hours). You MUST have your own
 eBay API application key for this and you MUST put it in
 /usr/local/etc/ebay.id. Requires curl and tidy

 bc-temperature-voronoi.pl: creates an SVG map from temperature data
 using qhull/qdelaunay/qvoronoi (currently static, hope to make it live)

 bc-geonames2sqlite.pl: converts geonames data to a semi-efficient SQLite3 db

 bc-cityfind.pl: Given a string, attempt to find matching city
 (placename) in geonames db

 box-option-value.m: Mathematica computations for value of box and
 binary options (nadex.com, oanda.com)

Disclaimer:

 A lot of this stuff is crappy but I'm putting it here with the hopes
 of improving it (either myself or w/ help). None of this should be
 considered a finished product, or even beta test software.

 Some of this stuff contains obvious errors. This really is just
 "first cut", "proof of concept", "show and tell" code.

 In other words: no making fun of me, and no judging me on this
 stuff. If I ever come out of retirement and you hire me, my work
 isn't normally this crappy.

Captioned:

 These files are open captioned for humor-impaired. The XML tag {h}
 indicates itentional humor.

Things I want to learn about git:

  - Search all files, past and present, for given phrase (git-grep
  does NOT do this)

  - Checkout all versions of a given file

  - Checkout the entire tree as separate directories

  - diff between edited-uncommitted version and last committed version

