# generic service from http://nagios.sourceforge.net/docs/3_0/objectdefinitions.html#service

define service {
 name generic-service
 active_checks_enabled 1
 passive_checks_enabled 1
 parallelize_check 1
 obsess_over_service 1
 check_freshness 0
 notifications_enabled 1
 event_handler_enabled 1
 event_handler bc
 flap_detection_enabled 1
 failure_prediction_enabled 1
 process_perf_data 1
 retain_status_information 1
 retain_nonstatus_information 1
 is_volatile 0
 check_period 24x7
 max_check_attempts 3
 normal_check_interval 10
 retry_check_interval 2
 contacts noone
 notification_options w,u,c,r
 notification_interval 60
 notification_period 24x7
 register 0
}

# make sure barrycarter.info is resolving properly (right at the root level)
# Note that "check_dig" does NOT appear to have a +trace option
# Got this from nagyerass.txt (which I think I've abandoned)

define service {
 use generic-service
 host_name bcinfo
 service_description dns_a
 check_command raw!"dig +trace barrycarter.info | egrep 'IN[[:space:]]+A' | cut -f 5 | sort | paste -s -d, | fgrep -xx 204.12.202.206"!--func=1is2
}

# and the MX records
define service {
 use generic-service
 host_name bcinfo
 service_description dns_mx
 check_command raw!"dig -t mx +trace barrycarter.info | egrep 'IN[[:space:]]MX' | cut -f 5 | sort | paste -s -d, | fgrep -ix '10 ASPMX2.GOOGLEMAIL.com.,10 ASPMX3.GOOGLEMAIL.com.,10 ASPMX4.GOOGLEMAIL.com.,10 ASPMX5.GOOGLEMAIL.com.,1 ASPMX.L.GOOGLE.com.,5 ALT1.ASPMX.L.GOOGLE.com.,5 ALT2.ASPMX.L.GOOGLE.com.'"!--func=1is2
}

# I use opendns locally, but sometimes dhcp resets resolv.conf
define service {
 use generic-service
 host_name localhost
 service_description resolv
 check_command raw!"sort /etc/resolv.conf | cut -d' ' -f 2 | paste -s -d, | fgrep -x '208.67.220.220,208.67.222.222'"!--func=1is2!--fix="fix_resolv()"
}

# make sure maillog shows no unsent messages
# TODO: can I use grep -q here; using wc is kludgey
define service {
 use generic-service
 host_name localhost
 service_description maillog
 check_command raw!"sudo fgrep 'stat=' /var/log/maillog | fgrep -iv 'stat=sent'"!--func=1is0
}

# localhost SMTP
define service {
 use generic-service
 host_name localhost
 service_description smtp
 check_command raw!"check_smtp -H 127.0.0.1 -e 'ESMTP'"
}

# my /tmp directory sometimes gets really big
# <h>and if you've seen my coding style, you know why!</h>
# As a side note, this "fixes" the problem (caution!)
# mkdir /tmp.new; chmod 1777 /tmp.new; mv /tmp /tmp.old; mv /tmp.new /tmp
# (and delete /tmp.old when ready; this should preserve "open filehandles")

define service {
 use generic-service
 host_name localhost
 service_description tmpsize
 check_command raw!"bc_nagios_file_size('/tmp', 1000000)"
}

# disk full
define service {
 use generic-service
 host_name localhost
 service_description df
 check_command raw!"check_disk -c 5.99999 -u GB /"
}

# I was doing http tests using montastic's free services, but doing
# them here too (copied from nagyerass.txt, see there for comments)

# check cheapbay.barrycarter.info
# with montastic I also check the db version below, but not here
# http://1dba67f21d23895ff3022d513ed2193b.ebay.db.94y.info/

define service {
 use generic-service
 host_name bcinfo
 service_description cheapbay
 check_command raw!"check_http -t 15 -f follow -H cheapbay.barrycarter.info -R 'coupon' -u '/' -M 15m"
}

define service {
 use generic-service
 host_name bcinfo
 service_description textweather
 check_command raw!"check_http -t 15 -f follow -H albuquerque.weather.94y.info -R 'albuquerque international' -u '/'"
}

# gocomics comments db
define service {
 use generic-service
 host_name bcinfo
 service_description gocomicsdb
 check_command raw!"check_http -t 15 -f follow -H 09c5bf679fb2cee590bf6643cb59fe89.gocomics.db.barrycarter.info -R 'SUCCESS' -u '/'"
}

# metar db
define service {
 use generic-service
 host_name bcinfo
 service_description metardb
 check_command raw!"check_http -t 15 -f follow -H 2f3ac7ee5a6364377a72056456b4a1df.metarnew.db.94y.info -R 'SUCCESS' -u '/'"
}

# wordpress (not checking barrycarter.info itself, though I do on montastic)
define service {
 use generic-service
 host_name bcinfo
 service_description wordpress
 check_command raw!"check_http -t 15 -f follow -H wordpress.barrycarter.info -R 'July 2011' -u '/'"
}

# gaim logs
# TODO: consider lowering normal_check_interval here?
define service {
 use generic-service
 host_name localhost
 service_description gaimlog
 ; use of space below is kludge
 ; TODO: fix!
 check_command raw!"bc_gaim_log_unanswered( )"
}

# bc-stream-twitter
define service {
 use generic-service
 host_name localhost
 service_description streamtwit
 ; use of space below is kludge
 ; TODO: fix!
 check_command raw!"bc_stream_twitter_test( )"
}


# ntp (wrote a kludge webscript to do this [for montastic], but now
# doing it the right way)

# TODO: write ntp!

# On montastic, I use the below to confirm DNS, but don't feel like
# doing it here (even my check_dig is imperfect, because it won't
# catch when one server fails)

# http://network-tools.com/default.asp?prog=dnsrec&noncache=yes&host=barrycarter.info (and look for 204.12.202.206 and aspmx.l.google.com)


